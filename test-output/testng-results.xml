<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[adding logs to test1]]>
    </line>
  </reporter-output>
  <suite started-at="2024-01-04T18:53:43 IST" name="Suite" finished-at="2024-01-04T18:54:43 IST" duration-ms="59728">
    <groups>
      <group name="regression">
        <method signature="PageTest2.test3()[pri:0, instance:pages.test.PageTest2@7e07db1f]" name="test3" class="pages.test.PageTest2"/>
        <method signature="PageTest3.test2()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test2" class="pages.test.PageTest3"/>
        <method signature="PageTest3.test3()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test3" class="pages.test.PageTest3"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="PageTest2.test1()[pri:0, instance:pages.test.PageTest2@7e07db1f]" name="test1" class="pages.test.PageTest2"/>
        <method signature="PageTest3.test1()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test1" class="pages.test.PageTest3"/>
        <method signature="PageTest3.test4()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test4" class="pages.test.PageTest3"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="PageTest3.test3()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test3" class="pages.test.PageTest3"/>
        <method signature="PageTest3.test5()[pri:0, instance:pages.test.PageTest3@3ce1e309]" name="test5" class="pages.test.PageTest3"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-01-04T18:53:43 IST" name="Test" finished-at="2024-01-04T18:54:43 IST" duration-ms="59728">
      <class name="pages.test.PageTest2">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:25 IST" name="beforeMethod" finished-at="2024-01-04T18:54:32 IST" duration-ms="6594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:32 IST" name="test1" description="PageTest2 test1 description" finished-at="2024-01-04T18:54:33 IST" duration-ms="1014" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[adding logs to test1]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:33 IST" name="AfterMethod" finished-at="2024-01-04T18:54:35 IST" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:35 IST" name="beforeMethod" finished-at="2024-01-04T18:54:40 IST" duration-ms="4419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:40 IST" name="test3" description="PageTest2 test3 description" finished-at="2024-01-04T18:54:41 IST" duration-ms="1014" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at pages.test.PageTest2.test3(PageTest2.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:45)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:73)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest2@7e07db1f]" started-at="2024-01-04T18:54:41 IST" name="AfterMethod" finished-at="2024-01-04T18:54:43 IST" duration-ms="2195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- pages.test.PageTest2 -->
      <class name="pages.test.PageTest3">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:53:43 IST" name="beforeMethod" finished-at="2024-01-04T18:53:51 IST" duration-ms="7453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:53:51 IST" name="test1" description="PageTest3 test1 description" finished-at="2024-01-04T18:53:52 IST" duration-ms="1369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:53:52 IST" name="AfterMethod" finished-at="2024-01-04T18:53:54 IST" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:53:54 IST" name="beforeMethod" finished-at="2024-01-04T18:54:00 IST" duration-ms="6208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:00 IST" name="test2" description="PageTest3 test2 description" finished-at="2024-01-04T18:54:00 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:00 IST" name="AfterMethod" finished-at="2024-01-04T18:54:03 IST" duration-ms="2261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:03 IST" name="beforeMethod" finished-at="2024-01-04T18:54:07 IST" duration-ms="4398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:07 IST" name="test3" description="PageTest3 test3 description" finished-at="2024-01-04T18:54:08 IST" duration-ms="1005" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at pages.test.PageTest3.test3(PageTest3.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:45)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:73)
at org.testng.internal.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:08 IST" name="AfterMethod" finished-at="2024-01-04T18:54:10 IST" duration-ms="2201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:10 IST" name="beforeMethod" finished-at="2024-01-04T18:54:15 IST" duration-ms="4560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test4()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:15 IST" name="test4" description="PageTest3 test4 description" finished-at="2024-01-04T18:54:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:15 IST" name="AfterMethod" finished-at="2024-01-04T18:54:17 IST" duration-ms="2186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:17 IST" name="beforeMethod" finished-at="2024-01-04T18:54:23 IST" duration-ms="6140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test5()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:23 IST" name="test5" description="PageTest3 test2 description" finished-at="2024-01-04T18:54:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:pages.test.PageTest3@3ce1e309]" started-at="2024-01-04T18:54:23 IST" name="AfterMethod" finished-at="2024-01-04T18:54:25 IST" duration-ms="2224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- pages.test.PageTest3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
